# Based on Synthetify's workflow
# https://github.com/Synthetify/synthetify-protocol/blob/master/.github/workflows/test.yml

name: Anchor Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  solana_verion: 1.7.11
  anchor_version: 0.18.2

jobs:
  anchor_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
          cache: "yarn"
      - uses: actions/cache@v2
        name: Cache Cargo registry + index
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_PATH
      - uses: actions/cache@v2
        name: Cache Solana Tool Suite
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.solana_verion }}
      - uses: actions/cache@v2
        name: Cache target folder
        id: cache-programs
        with:
          path: |
            ./target
          key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.solana_verion }}/install)"
      - name: setup solana
        run: |
          solana --version
          solana-keygen new
      - run: yarn install
      - run: npx @project-serum/anchor-cli@${{ env.anchor_version }} test
